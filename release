#!/bin/bash

# setup:
# apt install build-essential gcc-arm-linux-gnueabihf
#
# apt intall rsync ssh jq

set -ue

export CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER="/usr/bin/arm-linux-gnueabihf-gcc"

TARGET="armv7-unknown-linux-gnueabihf"
ARCH="armhf"

DEVBOARD="wemon-dev"

NAMES=("ipdisserver" "ipdisscan")

add_target () {
    rustup target add ${TARGET}
}

get_version () {
    local name=${1}
    local metadata=$(cargo metadata --format-version 1)
    local version=$(echo ${metadata} | jq '.packages[] | select(.name == "'${name}'") | .version')
    echo ${version} | tr -d '"'
}

build_debug () {
    cargo build --target=${TARGET}
}

build_release () {
    cargo build --target=${TARGET} --release
}

rename_binary () {
    local name=${1}
    local target_dir="target/${TARGET}/release"
    local version=$(get_version ${name})
    local new_name=${name}-${ARCH}-${version}
    ln -vf ${target_dir}/${name} ${target_dir}/${new_name}
}

prepare_releases () {
    build_release
    for name in ${NAMES[@]}; do
        rename_binary ${name}
    done
}

deploy_dev () {
    build_debug
    local target_dir="target/${TARGET}/debug"
    for name in ${NAMES[@]}; do
        read -r -p "Deploying ${name} to ${DEVBOARD}. Continue? [Y/n] " resp
        case ${resp} in
            [nN][oO]|[nN]) exit 0 ;;
            [yY][eE][sS]|[yY]|"")
                rsync -Phpv ${target_dir}/${name} ${DEVBOARD}:/usr/local/bin/
                ;;
            *)
                echo "Unexpected answer: ${resp}" >&2
                exit 2
                ;;
        esac
    done
}

help="
Usage: \n
Build and deploy to development taget: \n
\t ./release --dev \n
Build and produce versioned binary: \n
\t ./release --rel
"

if [ ${#} -ne 1 ]; then
    echo -e ${help} >&2
    exit 2
fi
for arg in ${@}; do
    case ${arg} in
        "--dev")
            add_target
            deploy_dev
            ;;
        "--rel")
            add_target
            prepare_releases
            ;;
        *)
            echo -e ${help} >&2
            exit 2
            ;;
    esac
done
